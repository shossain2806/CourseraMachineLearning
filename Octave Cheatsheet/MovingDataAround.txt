A = [1 2; 3 4; 5 6]
sz = size(A)
size(sz) 
size(A, 1) % number of rows in matrix A
size(A, 2) % number of columns in matrix A
V = [1, 2, 3, 4, 5] % vector
length(V) % size of the longer dimension
length(A) % 3 ; usually apply length for vector


pwd % current direct
cd % changed directory
ls % list of lifes in the current directory
load feature.dat
load price.dat
load('feature.dat')
who % variable in the current scope
whos % detailed of who
clear feature_x 
v = price_y(1:10) % first 10 element
save hello.mat v;
clear 
who
load hello.mat
save hello.txt v -asci  


A = [1 2; 3 4; 5 6]
A(3,2) 
A(2,:) % all element in row 2
A(:, 2) // second column
A([1 3]; :)// get 1st and 3rd rows all element
A(:, 2) = [10; 11; 12]
A = [A, [100; 111; 112]] // append a column vector
A(:) // put all elements in single column vector
A = [1 2; 3 4; 5 6];
B = [11 12; 13 14; 15 16];
C = [A B] // append
C = [A; B] //top of each other